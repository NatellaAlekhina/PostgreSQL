10. Для одного из запросов, созданных в пункте 6, провести оптимизацию. 
В качестве отчета приложить планы выполнения запроса, 
ваш анализ и показать действия, которые улучшили эффективность запроса. 


EXPLAIN SELECT  
	cars_diares.car_id,
	cars.car_brand AS car_brand,
	cars.car_model AS car_model,
	users.first_name AS user_first_name,
	users.last_name AS user_last_name
FROM cars_diares
  JOIN cars
    ON cars.id=cars_diares.car_id
  LEFT JOIN users
    ON users.id=cars_diares.user_id;


"QUERY PLAN"
"Hash Left Join  (cost=8.50..32.64 rows=920 width=29)"
"  Hash Cond: (cars_diares.user_id = users.id)"
"  ->  Hash Join  (cost=4.25..25.92 rows=920 width=20)"
"        Hash Cond: (cars_diares.car_id = cars.id)"
"        ->  Seq Scan on cars_diares  (cost=0.00..19.20 rows=920 width=8)"
"        ->  Hash  (cost=3.00..3.00 rows=100 width=16)"
"              ->  Seq Scan on cars  (cost=0.00..3.00 rows=100 width=16)"
"  ->  Hash  (cost=3.00..3.00 rows=100 width=17)"
"        ->  Seq Scan on users  (cost=0.00..3.00 rows=100 width=17)"


Оптимизируйте запросы для кэша запросов. 
Для повторяющихся запросов данные будут выбираться из кеша 
а не считываться с носителя. Запросы, которые получают одинаковую информацию, 
в рамках проекта должны быть синтаксически полностью идентичными.


Используйте LIMIT если нужно получить не все строки. 
Не выбирайте строки, которые вам не нужны в результате

Старайтесь по максимуму использовать первичные ключи 
так как по столбцам первичных ключей построены и используются наиболее эффективные индексы.

Для столбцов используйте ограничение NOT NULL, 
если это не противоречит бизнес-логике приложения. 
Данные, в столбцах которых значение NULL разрешено, обрабатываются медленнее.

Индексируйте поля поиска, сортировки и объединения для наиболее частых и “тяжелых” запросов. 


Для связываемых столбцов используйте одинаковые типы данных. 
Если в сложных запросах таблицы связываются по столбцам, 
для которых определены одинаковые типы данных, то такие запросы работают быстрее.



